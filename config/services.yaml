parameters:
    mailer_from: "%env(MAILER_FROM_EMAIL)%"
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Model/User/Entity'
            - '../src/Model/Work/Entity'
            - '../src/Kernel.php'

    App\Model\User\Entity\User\UserRepository: ~
    App\Model\Work\Entity\Members\Group\GroupRepository: ~
    App\Model\Work\Entity\Members\Member\MemberRepository: ~
    App\Model\Work\Entity\Projects\Project\ProjectRepository: ~

    App\Model\User\Service\Mailer\MailerSender:
        calls:
            -   method: setMailSenderFrom
                arguments:
                    - "%mailer_from%"

    App\Model\User\Service\Tokenizer\ResetTokenizer:
        factory: [ 'App\Container\Model\User\Service\Tokenizer\ResetTokenizerFactory', 'create' ]
        arguments: [ 'PT1H' ]

    Predis\Client:
        arguments:
            - '%env(REDIS_URL)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Predis\Client'

    Symfony\Component\HttpFoundation\Session\Session:
        alias: Symfony\Component\HttpFoundation\Session\SessionInterface

    App\Menu\SidebarMenu:
        tags:
            - { name: knp_menu.menu_builder, method: build, alias: sidebar }

    App\Menu\Work\ProjectMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: work_project } ]